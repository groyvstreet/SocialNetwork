version: "3.9"

networks:
  post-service-network:
    driver: bridge

  identity-service-network:
    driver: bridge

  chat-service-network:
    driver: bridge

  kafka-network:
    driver: bridge

  zookeeper-network:
    driver: bridge

services:
  post-service-app: 
    container_name: post-service
    ports:
      - "80:80"
    networks:
      - post-service-network
      - kafka-network

  postgresql-db:
    container_name: postgresql
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: post-service
    ports:
      - "5432:5432"
    networks:
      - post-service-network

  identity-service-app:
    container_name: identity-service
    ports:
      - "81:80"
    networks:
      - identity-service-network
      - kafka-network

  mssqlserver-db:
    container_name: mssqlserver
    environment:
      SA_PASSWORD: S3cur3P@ssW0rd!
      ACCEPT_EULA: Y
    ports:
      - "1433:1433"
    networks:
      - identity-service-network

  chat-service-app:
    container_name: chat-service
    ports:
      - "82:80"
    networks:
      - chat-service-network
      - kafka-network

  mongo-db:
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - chat-service-network

  zookeeper:
    ports:
      - "2181:2181"
    networks:
      - zookeeper-network

  kafka:
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "users:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    networks:
      - kafka-network
      - zookeeper-network
